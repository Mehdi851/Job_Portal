@using JobHunting.Models;
@*@using MultipleModelInOneView;*@
@model dynamic
@{
                ViewBag.Title = "AddNewJob";
                Layout = "~/Views/Shared/_LayoutEmp.cshtml";
                var categoriesList = new List<string>() {""};
                List<string> citites = new List<string>() { "","Islamabad", "Rawalpindi", "Lahore", "Karachi", "Peshawar","Multan","Queta" };
                List<string> gender = new List<string>() { "","Male", "Female", "Not Specific" };
                List<string> type = new List<string>() { "","Full Time", "Part Time", "Remote"};
                IEnumerable<JobCategoryModel> jobCategories = Model.Categories;
                foreach (JobCategoryModel item in jobCategories)
                {
                    categoriesList.Add(item.Title.ToString());
                }
            }
<style>
    .card {
        background: white;
        border-radius: 30px;
        box-shadow: 12px 12px 22px grey;
        }

    .textarea {
        width: 200px;
    }
</style>
<div class="container">
    <div class="row">
        <div class="card">
            <div class="card-header" style="border:0px; border-top-left-radius: 30px;border-top-right-radius: 30px;">
                <h1>Add New Jobs</h1>
            </div>
            <div class="card-body">


                @*@using (Html.BeginForm("AddNewJob", "Employeer", "Post",""))
                {*@
                    @*@Html.AntiForgeryToken()*@
                <form action="/Employeer/AddNewJob" method="post" onsubmit="return valid()">
                    <div class="form-horizontal">

                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="col-lg-5">
                            <div class="form-group">
                                @Html.Label("Title", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <input class="form-control" name="Title" id="title" />
                                    <span id="invalidTitle" class="text-danger"></span>
                                    @*@Html.ValidationMessage("Title", "", new { @class = "text-danger", @id = "invalidTitle" })*@
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("City", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("City", new SelectList(citites), htmlAttributes: new { @class = "form-control",@id="city" })
                                    @Html.ValidationMessage("City", "", new { @class = "text-danger", @id = "invalidCity" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("Salary", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <input class="form-control" name="Salary" id="salary" />

                                    @Html.ValidationMessage("Salary", "", new { @class = "text-danger", @id = "invalidSalary" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("Postion", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <input class="form-control" name="Postion" id="position" />
                                    <span id="invalidPostion" class="text-danger"></span>
                                    @*@Html.ValidationMessage("Postion", "", new { @class = "text-danger", @id = "invalidPostion" })*@
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("Gender", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("Gender", new SelectList(gender), htmlAttributes: new { @class = "form-control", @id = "gender" })
                                    @*@Html.ValidationMessage("Postion", "", new { @class = "text-danger", @id = "invalidGender" })*@
                                    <span id="invalidGender" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("Type", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("Type", new SelectList(type), htmlAttributes: new { @class = "form-control", @id = "type" })
                                    @Html.ValidationMessage("Postion", "", new { @class = "text-danger", @id = "invalidType" })
                                </div>
                            </div>


                        </div>
                        <div class="col-lg-7">

                            <div class="form-group">
                                @Html.Label("ShortDescription", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <input name="ShortDescription" class="form-control" id="ShortDescription" />
                                    <span id="invalidShortDescription" class="text-danger"></span>
                                   
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("Category", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("Category", new SelectList(categoriesList), htmlAttributes: new { @class = "form-control", @id = "category" })
                                    <span id="invalidCategory" class="text-danger"></span>
                                    
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("CompanyName", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <input name="CompanyName" id="company" class="form-control" />
                                    <span id="invalidCompanyName" class="text-danger"></span>
                                   
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("RequiredAge", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <input name="RequiredAge" id="age" class="form-control" />
                                    <span id="invalidRequiredAge" class="text-danger"></span>
                               
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("PostNo", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <input name="PostNo" id="postNo" class="form-control" />
                                    <span id="invalidPostNo" class="text-danger"></span>
                                  
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("Requirements", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @*@Html.TextArea("Requirements", new { htmlAttributes = new { @class = "form-control" } })*@
                                    <textarea name="Requirements" id="requirements" class="form-control" style="height:150px; "></textarea>
                                    <span id="invalidRequirements" class="text-danger"></span>
                                </div>
                            </div>

                        </div>
                        <div class="col-lg-12">


                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save" class="btn btn-lg btn-success" />
                                <a href="/Employeer/Index" class="btn btn-lg btn-danger">Cancel</a>
                            </div>
                        </div>
                    </div>
                    @*}*@
                </form>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script>

        function valid() {

            var title = $("#title").val();
            var city = $("#city").val();
            var salary = $("#salary").val();
            var gender = $("#gender").val();
            var position = $("#position").val();
            var type = $("#type").val();
            var ShortDescription = $("#ShortDescription").val();
            var category = $("#category").val();
            var company = $("#company").val();
            var age = $("#age").val();
            var postNo = $("#postNo").val();
            var requirements = $("#requirements").val();
            document.getElementById("invalidTitle").innerHTML = "";
            document.getElementById("invalidCity").innerHTML = "";
            document.getElementById("invalidSalary").innerHTML = "";
            document.getElementById("invalidGender").innerHTML = "";
            document.getElementById("invalidPostion").innerHTML = "";
            document.getElementById("invalidType").innerHTML = "";
            document.getElementById("invalidShortDescription").innerHTML = "";
            document.getElementById("invalidCategory").innerHTML = "";
            document.getElementById("invalidCompanyName").innerHTML = "";
            document.getElementById("invalidRequiredAge").innerHTML = "";
            document.getElementById("invalidPostNo").innerHTML = "";
            document.getElementById("invalidRequirements").innerHTML = "";
            //alert("test");

            if (title == "" || title == undefined) {

                document.getElementById("invalidTitle").innerHTML = "Please Enter Your Title";
                //alert("invalid");
                return false;
            }
            if (city == "" || city == undefined) {
                document.getElementById("invalidCity").innerHTML = "Please Enter Your City";
                return false;
            }
            if (salary == "" || salary == undefined) {
                document.getElementById("invalidSalary").innerHTML = "Please Enter Your Salary";
                return false;
            }
            if (position == "" || position == undefined) {
                document.getElementById("invalidPostion").innerHTML = "Please Enter Your Position";
                return false;
            }
            if (gender == "" || gender == undefined) {
                document.getElementById("invalidGender").innerHTML = "Please Enter The Gender";
                return false;
            }

            if (type == "" || type == undefined) {
                document.getElementById("invalidType").innerHTML = "Please Enter Job Type";
                return false;
            }
            if (ShortDescription == "" || ShortDescription == undefined) {
                document.getElementById("invalidShortDescription").innerHTML = "Please Enter Short Description";
                return false;
            }
            if (category == "" || category == undefined) {
                document.getElementById("invalidCategory").innerHTML = "Please Enter Job Category";
                return false;
            }
            if (company == "" || company == undefined) {
                document.getElementById("invalidCompanyName").innerHTML = "Please Enter Company Name";
                return false;
            }
            if (age == "" || age == undefined) {
                document.getElementById("invalidRequiredAge").innerHTML = "Please Enter Required Age for Job";
                return false;
            }
            if (postNo == "" || postNo == undefined) {
                document.getElementById("invalidPostNo").innerHTML = "Please Enter Number of Posts";
                return false;
            }
            if (requirements == "" || requirements == undefined) {
                document.getElementById("invalidRequirements").innerHTML = "Please Enter Requirements for Post";
                return false;
            }
            else {
                console.log("valid");
                return true;
            }
            return false;

        }

    </script>
    
    }